AWSTemplateFormatVersion: 2010-09-09
Description: |
  This AWS Cloudformation template aims to create a phonebook application in Python and deployed as a web application with Flask on AWS Application Load Balancer with Auto Scaling Group of Elastic Compute Cloud (EC2) Instances and Relational Database Service (RDS) using AWS Cloudformation Service.
  
Parameters:
  myVPC:
    Description: Select your VPC
    Type: AWS::EC2::VPC::Id

  mySubnets:
    Description: Select at least 2 subnets
    Type: List<AWS::EC2::Subnet::Id>

  myKP:
    Description: Select your Key
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0dc2d3e4c0f9ebd18
    us-east-2:
      AMI: ami-0233c2d874b811deb
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538
    eu-west-1:
      AMI: ami-058b1b7fe545997ae
  
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB, supporting HTTP connection. # Required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80  
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref myVPC

  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets: !Ref mySubnets
      Type: application
  
  myTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref myVPC
  
  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
          TargetGroupArn: !Ref myTG
      LoadBalancerArn: !Ref myALB # Required
      Port: 80
      Protocol: HTTP
  
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 security group, enabling secure SSH connection and HTTP connection from ALBSecurityGroup. # Required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - !GetAtt ALBSecurityGroup.GroupId
      VpcId: !Ref myVPC
  
  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
         - RegionImageMap
         - !Ref AWS::Region
         - AMI
        InstanceType: t2.micro
        KeyName: !Ref myKP
        SecurityGroupIds:
          - !GetAtt EC2SecurityGroup.GroupId
        UserData: !Base64 |
          #! /bin/bash
          yum update -y
          yum install git -y
          pip3 install flask 
          pip3 install flask-mysql
          pip3 install sqlalchemy
          pip3 install flask-SQLAlchemy
          FOLDER="https://github.com/leyla-kose/aws_projects/tree/main/Project-004-Phonebook-Application"
          wget FOLDER/phonebook-app.py
          mkdir templates && cd templates
          wget FOLDER/templates/add-update.html
          wget FOLDER/templates/delete.html
          wget FOLDER/templates/index.html

          python3 app-with-mysql.py




  
  
  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLT
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs:
        - !Ref myTG
  
  myCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref myASG  # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0


Outputs: